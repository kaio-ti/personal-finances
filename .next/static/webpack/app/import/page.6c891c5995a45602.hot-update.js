"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/import/page",{

/***/ "(app-pages-browser)/./lib/file-processors.ts":
/*!********************************!*\
  !*** ./lib/file-processors.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processCSV: function() { return /* binding */ processCSV; }\n/* harmony export */ });\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! papaparse */ \"(app-pages-browser)/./node_modules/papaparse/papaparse.min.js\");\n/* harmony import */ var papaparse__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(papaparse__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ processCSV auto */ \n// Função para converter string de número para float\nconst parseCurrency = (value)=>{\n    return parseFloat(value.replace(\",\", \".\"));\n};\n// Função para converter data do CSV para DD/MM/YYYY\nconst parseDate = (dateStr)=>{\n    const parts = dateStr.split(\"/\");\n    if (parts.length === 3) {\n        const [day, month, year] = parts;\n        return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n    }\n    return dateStr;\n};\nasync function processCSV(file) {\n    return new Promise((resolve, reject)=>{\n        papaparse__WEBPACK_IMPORTED_MODULE_0___default().parse(file, {\n            header: true,\n            skipEmptyLines: true,\n            encoding: \"UTF-8\",\n            complete: (results)=>{\n                try {\n                    const transactions = results.data.map((row, index)=>{\n                        try {\n                            const amount = parseCurrency(row[\"Valor (em R$)\"]) || 0;\n                            if (row[\"Descri\\xe7\\xe3o\"] === \"Inclusao de Pagamento\" || amount < 0) {\n                                return null; // Transações inválidas\n                            }\n                            return {\n                                description: row[\"Descri\\xe7\\xe3o\"] || \"Sem descri\\xe7\\xe3o\",\n                                amount,\n                                date: parseDate(row[\"Data de Compra\"]) || new Date().toISOString(),\n                                category: row[\"Categoria\"] || \"Outros\",\n                                installment: row[\"Parcela\"] || \"\\xdanica\",\n                                paymentMethod: \"Cr\\xe9dito\",\n                                monthYear: \"\"\n                            };\n                        } catch (err) {\n                            console.error(\"Erro ao processar linha \".concat(index + 1, \":\"), err);\n                            return null;\n                        }\n                    }).filter((tx)=>tx !== null); // ✅ Remove os `null` corretamente!\n                    resolve(transactions);\n                } catch (err) {\n                    reject(err);\n                }\n            },\n            error: (error)=>{\n                reject(error);\n            }\n        });\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9maWxlLXByb2Nlc3NvcnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O2dFQUU2QjtBQUc3QixvREFBb0Q7QUFDcEQsTUFBTUMsZ0JBQWdCLENBQUNDO0lBQ3JCLE9BQU9DLFdBQVdELE1BQU1FLE9BQU8sQ0FBQyxLQUFLO0FBQ3ZDO0FBRUEsb0RBQW9EO0FBQ3BELE1BQU1DLFlBQVksQ0FBQ0M7SUFDakIsTUFBTUMsUUFBUUQsUUFBUUUsS0FBSyxDQUFDO0lBQzVCLElBQUlELE1BQU1FLE1BQU0sS0FBSyxHQUFHO1FBQ3RCLE1BQU0sQ0FBQ0MsS0FBS0MsT0FBT0MsS0FBSyxHQUFHTDtRQUMzQixPQUFPLEdBQVdJLE9BQVJDLE1BQUssS0FBWUYsT0FBVEMsT0FBTSxLQUFPLE9BQUpEO0lBQzdCO0lBQ0EsT0FBT0o7QUFDVDtBQUVPLGVBQWVPLFdBQVdDLElBQVU7SUFDekMsT0FBTyxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1FBQzNCakIsc0RBQVUsQ0FBQ2MsTUFBTTtZQUNmSyxRQUFRO1lBQ1JDLGdCQUFnQjtZQUNoQkMsVUFBVTtZQUNWQyxVQUFVLENBQUNDO2dCQUNULElBQUk7b0JBQ0YsTUFBTUMsZUFBZUQsUUFBUUUsSUFBSSxDQUM5QkMsR0FBRyxDQUFDLENBQUNDLEtBQVVDO3dCQUNkLElBQUk7NEJBQ0YsTUFBTUMsU0FBUzVCLGNBQWMwQixHQUFHLENBQUMsZ0JBQWdCLEtBQUs7NEJBRXRELElBQ0VBLEdBQUcsQ0FBQyxrQkFBWSxLQUFLLDJCQUNyQkUsU0FBUyxHQUNUO2dDQUNBLE9BQU8sTUFBTSx1QkFBdUI7NEJBQ3RDOzRCQUVBLE9BQU87Z0NBQ0xDLGFBQWFILEdBQUcsQ0FBQyxrQkFBWSxJQUFJO2dDQUNqQ0U7Z0NBQ0FFLE1BQ0UxQixVQUFVc0IsR0FBRyxDQUFDLGlCQUFpQixLQUMvQixJQUFJSyxPQUFPQyxXQUFXO2dDQUN4QkMsVUFBVVAsR0FBRyxDQUFDLFlBQVksSUFBSTtnQ0FDOUJRLGFBQWFSLEdBQUcsQ0FBQyxVQUFVLElBQUk7Z0NBQy9CUyxlQUFlO2dDQUNmQyxXQUFXOzRCQUNiO3dCQUNGLEVBQUUsT0FBT0MsS0FBSzs0QkFDWkMsUUFBUUMsS0FBSyxDQUFDLDJCQUFxQyxPQUFWWixRQUFRLEdBQUUsTUFBSVU7NEJBQ3ZELE9BQU87d0JBQ1Q7b0JBQ0YsR0FDQ0csTUFBTSxDQUFDLENBQUNDLEtBQTBCQSxPQUFPLE9BQU8sbUNBQW1DO29CQUV0RjFCLFFBQVFRO2dCQUNWLEVBQUUsT0FBT2MsS0FBSztvQkFDWnJCLE9BQU9xQjtnQkFDVDtZQUNGO1lBQ0FFLE9BQU8sQ0FBQ0E7Z0JBQ052QixPQUFPdUI7WUFDVDtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZmlsZS1wcm9jZXNzb3JzLnRzPzNjNWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBQYXBhIGZyb20gXCJwYXBhcGFyc2VcIjtcbmltcG9ydCB7IFRyYW5zYWN0aW9uIH0gZnJvbSBcIkAvbGliL2RiXCI7XG5cbi8vIEZ1bsOnw6NvIHBhcmEgY29udmVydGVyIHN0cmluZyBkZSBuw7ptZXJvIHBhcmEgZmxvYXRcbmNvbnN0IHBhcnNlQ3VycmVuY3kgPSAodmFsdWU6IHN0cmluZykgPT4ge1xuICByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZS5yZXBsYWNlKFwiLFwiLCBcIi5cIikpO1xufTtcblxuLy8gRnVuw6fDo28gcGFyYSBjb252ZXJ0ZXIgZGF0YSBkbyBDU1YgcGFyYSBERC9NTS9ZWVlZXG5jb25zdCBwYXJzZURhdGUgPSAoZGF0ZVN0cjogc3RyaW5nKSA9PiB7XG4gIGNvbnN0IHBhcnRzID0gZGF0ZVN0ci5zcGxpdChcIi9cIik7XG4gIGlmIChwYXJ0cy5sZW5ndGggPT09IDMpIHtcbiAgICBjb25zdCBbZGF5LCBtb250aCwgeWVhcl0gPSBwYXJ0cztcbiAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9YDtcbiAgfVxuICByZXR1cm4gZGF0ZVN0cjtcbn07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcm9jZXNzQ1NWKGZpbGU6IEZpbGUpOiBQcm9taXNlPFRyYW5zYWN0aW9uW10+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBQYXBhLnBhcnNlKGZpbGUsIHtcbiAgICAgIGhlYWRlcjogdHJ1ZSxcbiAgICAgIHNraXBFbXB0eUxpbmVzOiB0cnVlLFxuICAgICAgZW5jb2Rpbmc6IFwiVVRGLThcIixcbiAgICAgIGNvbXBsZXRlOiAocmVzdWx0cykgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9ucyA9IHJlc3VsdHMuZGF0YVxuICAgICAgICAgICAgLm1hcCgocm93OiBhbnksIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBhbW91bnQgPSBwYXJzZUN1cnJlbmN5KHJvd1tcIlZhbG9yIChlbSBSJClcIl0pIHx8IDA7XG5cbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICByb3dbXCJEZXNjcmnDp8Ojb1wiXSA9PT0gXCJJbmNsdXNhbyBkZSBQYWdhbWVudG9cIiB8fFxuICAgICAgICAgICAgICAgICAgYW1vdW50IDwgMFxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7IC8vIFRyYW5zYcOnw7VlcyBpbnbDoWxpZGFzXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiByb3dbXCJEZXNjcmnDp8Ojb1wiXSB8fCBcIlNlbSBkZXNjcmnDp8Ojb1wiLFxuICAgICAgICAgICAgICAgICAgYW1vdW50LFxuICAgICAgICAgICAgICAgICAgZGF0ZTpcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VEYXRlKHJvd1tcIkRhdGEgZGUgQ29tcHJhXCJdKSB8fFxuICAgICAgICAgICAgICAgICAgICBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICBjYXRlZ29yeTogcm93W1wiQ2F0ZWdvcmlhXCJdIHx8IFwiT3V0cm9zXCIsXG4gICAgICAgICAgICAgICAgICBpbnN0YWxsbWVudDogcm93W1wiUGFyY2VsYVwiXSB8fCBcIsOabmljYVwiLFxuICAgICAgICAgICAgICAgICAgcGF5bWVudE1ldGhvZDogXCJDcsOpZGl0b1wiLCAvLyBWYWxvciBwYWRyw6NvXG4gICAgICAgICAgICAgICAgICBtb250aFllYXI6IFwiXCIsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRXJybyBhbyBwcm9jZXNzYXIgbGluaGEgJHtpbmRleCArIDF9OmAsIGVycik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZmlsdGVyKCh0eCk6IHR4IGlzIFRyYW5zYWN0aW9uID0+IHR4ICE9PSBudWxsKTsgLy8g4pyFIFJlbW92ZSBvcyBgbnVsbGAgY29ycmV0YW1lbnRlIVxuXG4gICAgICAgICAgcmVzb2x2ZSh0cmFuc2FjdGlvbnMpO1xuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGVycm9yOiAoZXJyb3IpID0+IHtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIlBhcGEiLCJwYXJzZUN1cnJlbmN5IiwidmFsdWUiLCJwYXJzZUZsb2F0IiwicmVwbGFjZSIsInBhcnNlRGF0ZSIsImRhdGVTdHIiLCJwYXJ0cyIsInNwbGl0IiwibGVuZ3RoIiwiZGF5IiwibW9udGgiLCJ5ZWFyIiwicHJvY2Vzc0NTViIsImZpbGUiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInBhcnNlIiwiaGVhZGVyIiwic2tpcEVtcHR5TGluZXMiLCJlbmNvZGluZyIsImNvbXBsZXRlIiwicmVzdWx0cyIsInRyYW5zYWN0aW9ucyIsImRhdGEiLCJtYXAiLCJyb3ciLCJpbmRleCIsImFtb3VudCIsImRlc2NyaXB0aW9uIiwiZGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNhdGVnb3J5IiwiaW5zdGFsbG1lbnQiLCJwYXltZW50TWV0aG9kIiwibW9udGhZZWFyIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiZmlsdGVyIiwidHgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/file-processors.ts\n"));

/***/ })

});